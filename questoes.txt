1) O que é um repositório no Git e qual a sua importância?
Um repositório é onde ficam armazenados todos os arquivos de um projeto, junto com o histórico de alterações feitas neles. Ele é importante porque permite versionar o código, colaborar em equipe e recuperar versões anteriores caso seja necessário.

2) Qual a função do Git Bash?
O Git Bash é um terminal que simula o ambiente Unix no Windows e permite usar comandos do Git. Ele é utilizado para executar operações de versionamento, como criar commits, enviar para o GitHub, clonar projetos, etc.

3) O que faz o comando git add e qual a diferença entre git add <arquivo> e git add .?
git add prepara os arquivos para o próximo commit (coloca no "staging area").
git add <arquivo> adiciona apenas o arquivo específico.
git add . adiciona todos os arquivos modificados na pasta atual e subpastas.


4) Por que utilizamos o ponto (.) no comando git add .? Explique o comando git commit e por que é importante criar uma mensagem descritiva.
Porque o ponto representa o diretório atual. Assim, o comando adiciona todas as alterações detectadas dentro dele e de suas subpastas.


5) Qual a função do comando git push?
O git commit registra as alterações que foram adicionadas na área de stage no histórico do projeto. A mensagem descritiva é importante porque explica o que foi alterado, facilitando o entendimento do histórico e a colaboração em equipe.


6) Qual a importância de criar commits frequentes durante o desenvolvimento de um projeto? Explique a função das tags HTML e como elas estruturam uma página.
O git push envia os commits locais para o repositório remoto (como o GitHub), permitindo que outras pessoas vejam e usem as mudanças.


7) O que são atributos em uma tag HTML e qual a sua função?
Atributos são informações extras que podem ser adicionadas a uma tag HTML para configurar ou personalizar seu comportamento.

8) O que é o Emmet e como ele facilita o desenvolvimento de páginas HTML?
O Emmet é um recurso disponível em editores de código (como VS Code) que expande abreviações curtas em estruturas completas de HTML ou CSS.

9) O que é o box-sizing no CSS e por que usamos ele no reset inicial?
A propriedade 'box-sizing' define como o navegador calcula a largura e a altura de um elemento:

content-box (padrão): altura/largura não incluem padding e borda.
border-box: altura/largura incluem padding e borda.

No reset inicial usamos box-sizing: border-box; para facilitar o controle do layout, evitando cálculos manuais.

10) Por que é importante utilizar tags semânticas no HTML?
Dão significado ao conteúdo (ex.: `<header>`, `<main>`, `<footer>`).
Melhoram acessibilidade para leitores de tela.
* Organizam melhor o código.

11) O que são media queries no CSS e qual a sua função?
Media queries são regras que aplicam estilos diferentes de acordo com o tamanho da tela ou dispositivo.
Torna o layout **responsivo.

12) Qual a função do GitHub Pages?
O GitHub Pages permite hospedar sites estáticos (HTML, CSS, JS) gratuitamente direto de um repositório no GitHub, sem precisar de servidor externo.

13) O que é o Flexbox no CSS e para que ele é utilizado?
O Flexbox é um modelo de layout no CSS usado para alinhar, organizar e distribuir espaço entre elementos dentro de um contêiner flexível. Ele facilita a criação de layouts responsivos e dinâmicos sem precisar de muitos cálculos manuais.

14) Qual a diferença entre justify-content e align-items em um container Flexbox?
justify-content: alinha os itens no eixo principal (horizontal se for `row`, vertical se for `column`).
align-items: alinha os itens no eixo transversal (perpendicular ao principal).


15) Como o flex-grow funciona e qual o seu propósito no layout Flexbox? Explique a diferença entre flex-direction: column; e flex-direction: row;.
Flex-grow: define quanto um item deve crescer em relação aos outros quando há espaço extra no contêiner.
flex-direction: row; → organiza os itens em linha, da esquerda para a direita (padrão).
flex-direction: column; → organiza os itens em coluna, de cima para baixo.
